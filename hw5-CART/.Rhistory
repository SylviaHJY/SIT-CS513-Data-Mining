x<- -c(4:6)
rm(list=ls())
avector<-c(1,2,3,4)
typeof(avector)
second<-avector[2]
names(avector)<-c("first","second","third","fourth" )
second_el<-avector["second"]
v_na<-c(1,2,3,NA,5,6)
x<- -c(4:6)
v_nona<-v_na[-4]
avector<-c(1,2,3,x=5,6,7)
avector<-c(1,2,3,x<-5,6,7)
avector
avector<-c(1,2,3,x=5,6,7)
avector
my.lst <- list(34453, c("Khasha", "Dehand"), c(14.3,12,15,19))
my.lst[2]
typeof(my.lst[2])
library(kknn)
?kknn()
#Load the iris dataset and attach it
data(iris)
View(iris)
library(kknn)
?kknn()
#Load the iris dataset and attach it
data(iris)
View(iris)
predict_k5 <- kknn(formula=Species~., training, test[,-5], k=5,kernel ="triangular" )
?sample()
range_1_100<- 1:100
sample(range_1_100,80)
smpl80 <- sort(sample(range_1_100,80))
?sort()
idx<-sort(sample(nrow(iris),as.integer(.65*nrow(iris))))
training<-iris[idx,]
test<-iris[-idx,]
predict_k5 <- kknn(formula=Species~., training, test[,-5], k=5,kernel ="rectangular")
fit <- fitted(predict_k5)
table(Actual=test$Species,Fitted=fit)
mmnorm <-function(x,minx,maxx) {z<-((x-minx)/(maxx-minx))
return(z)
}
Sepal.Length=mmnorm(iris[,1]
cbind
iris_normalized<-as.data.frame (
cbind( Sepal.Length=mmnorm(iris[,1],min(iris[,1]),max(iris[,1]))
, sepal.Width=mmnorm(iris[,2],min(iris[,2]),max(iris[,2] ))
,Petal.Length=mmnorm(iris[,3],min(iris[,3]),max(iris[,3] ))
, Petal.Width=mmnorm(iris[,4],min(iris[,4]),max(iris[,4] ))
,Species=as.character(iris[,5])
)
)
?kknn()
iris_missing<-iris
iris_missing[c(3,30,40),3]<-NA
iris_missing2<-kNN(iris_missing,variable ='Petal.Length',k=3,
dist_var=c('Sepal.Length','Sepal.Width'))
?kNN
??kNN
?kNN
iris_missing[c(3,30,40),3]<-NA
iris_missing2<-kNN(iris_missing,variable ='Petal.Length',k=3,
dist_var=c('Sepal.Length','Sepal.Width'))
library('VIM')
iris_missing<-iris
iris_missing[c(3,30,40),3]<-NA
iris_missing2<-kNN(iris_missing,variable ='Petal.Length',k=3,
dist_var=c('Sepal.Length','Sepal.Width'))
iris_missing2
?kNN
?kknn()
my.lst <- list(34453, c("Khasha", "Dehand"), c(14.3,12,15,19))
my.lst[2]
typeof(my.lst[2])
my.lst[2]
my.lst3<-my.lst[[2]]
my.lst3
typeof(my.lst3)
is.vector(my.lst3)
my.lst[2]
rm(list=ls())
rm(list=ls())
x <- c("a", "b", "c", "d")
for(i in 1:4){
print(x[i])
}
for(i in 1:100) {
if(i <= 20|i ==28 ) {
## Skip the first 20 iterations and the 28th
next
}
## Skip after the 50th
if(i >= 50) {
break
}
print(i)
}
logical1<-c(F,T,T,F,F,F)
logical2<-c(F,F,T,T,F,F)
logical1 &  logical2
logical1 && logical2
logical1<-c(F,T,T,F,F,F)
logical2<-c(F,F,T,T,F,F)
logical1 && logical2
rm(list=ls())
logical1<-c(F,T,T,F,F,F)
logical2<-c(F,F,T,T,F,F)
logical1 && logical2
logical1 |  logical2
logical1 || logical2
logical1<-c(T,T,T,F,F,F)
logical2<-c(F,F,T,T,F,F)
logical1 || logical2
rm(list=ls())
x <- list(a = 1:5, b=20:30 ,c=5:1)
lx<-lapply(x, mean)
is.list(lx)
lx<-lapply(x, mean)
lx
data(iris)
View(iris)
data()
?ifelse
?rpart()
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
?rpart()
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/hw5-CART")
data <- read.csv("breast-cancer-wisconsin.csv", na.strings = "?")
View(data)
