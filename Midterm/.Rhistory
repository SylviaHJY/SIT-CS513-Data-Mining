numeric_variables <- dplyr::select_if(data, is.numeric)
data_filled <- data %>% mutate_all(funs(ifelse(is.na(.), median(., na.rm = TRUE), .)))
median_F6 <- median(data$Income, na.rm = TRUE)
# Replacing the numerical missing values with the “median”
median_F6 <- median(data$Income, na.rm = TRUE)
median_Data <- median(data$Income, na.rm = TRUE)
median_Data <- median(data$Income, na.rm = TRUE)
median_Data <- median(data$Income, na.rm = TRUE)
median_Data <- median(data$Income, na.rm = TRUE)
rm(list=ls())
#############################################
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.csv", na.strings = "?")
View(data)
?summary
summary(data)
missingData = data[which(is.na(data$Income)),]
View(missingData)
median_Data <- median(data$Income, na.rm = TRUE)
data$Income <- replace(data$Income, is.na(data$Income), median_Data)
View(data)
median_Data
?pairs
pairs(data[c(2,3)], main = "Age & Gender")
?pairs
pairs(data[c(1,2)], main = "Age & Gender")
pairs(data[c(1,3)], main = "Age & Income")
?pairs()
pairs(data[c(1,3)], main = "Age & Income")
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.csv", na.strings = "?")
View(data)
?summary
summary(data)
missingData = data[which(is.na(data$Income)),]
View(missingData)
median_Data <- median(data$Income, na.rm = TRUE)
data$Income <- replace(data$Income, is.na(data$Income), median_Data)
View(data)
?pairs()
pairs(data[c(1,2)], main = "Age & Gender")
pairs(data[c(1,3)], main = "Age & Income")
?pairs()
pairs(data[c(2,4)], main = "Age & Income")
boxplot(data(2,4), main = "Box Plot of Age and Income", xlab = "Column", ylab = "Value")
boxplot(data[,c(2,4)], main = "Box Plot of Age and Income", xlab = "Column", ylab = "Value", names = c("Age", "Income"))
boxplot(data[,c(2)], main = "Box Plot of Age", xlab = "Column", ylab = "Value", names = c("Age"))
boxplot(data[,c(4)], main = "Box Plot of Income", xlab = "Column", ylab = "Value", names = c("Income"))
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_cat_full.CSV", na.strings = "?")
View(data)
?summary
summary(data)
View(data)
data <- na.omit(data)
View(data)
summary(data)
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_cat_full.CSV", na.strings = "?")
View(data)
?summary
summary(data)
data <- na.omit(data)
View(data)
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Region <- as.factor(data$Region)
data$Product <- as.factor(data$Product)
data$Purchase <- as.factor(data$Purchase)
View(data)
set.seed(123)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
if (!("e1071" %in% rownames(installed.packages()))) {
install.packages("e1071")
}
library(e1071)
naive_bayes_model <- naiveBayes(Class ~ ., data = trainData)
naive_bayes_model <- naiveBayes(Purchase ~ ., data = trainData)
conf_matrix <- table(Predicted = predictions, Actual = testData$Purchase)
predictions <- predict(naive_bayes_model, testData)
conf_matrix <- table(Predicted = predictions, Actual = testData$Purchase)
print(conf_matrix)
accuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)
cat("Accuracy:", accuracy * 100, "%\n")
true_positive <- conf_matrix[2, 2]
false_positive <- conf_matrix[1, 2]
true_negative <- conf_matrix[1, 1]
false_negative <- conf_matrix[2, 1]
precision <- true_positive / (true_positive + false_positive)
recall <- true_positive / (true_positive + false_negative)
specificity <- true_negative / (true_negative + false_positive)
f1 <- 2 * (precision * recall) / (precision + recall)
cat("Precision:", precision * 100, "%\n")
cat("Recall:", recall * 100, "%\n")
cat("Specificity:", specificity * 100, "%\n")
cat("F1 Score:", f1 * 100, "%\n")
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_cat_full.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Region <- as.factor(data$Region)
data$Product <- as.factor(data$Product)
data$Purchase <- as.factor(data$Purchase)
set.seed(222)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
if (!("e1071" %in% rownames(installed.packages()))) {
install.packages("e1071")
}
library(e1071)
naive_bayes_model <- naiveBayes(Purchase ~ ., data = trainData)
# Make predictions using the model
predictions <- predict(naive_bayes_model, testData)
# Evaluate the model's performance
conf_matrix <- table(Predicted = predictions, Actual = testData$Purchase)
print(conf_matrix)
accuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)
cat("Accuracy:", accuracy * 100, "%\n")
# Calculate precision, recall, specificity, and F1
true_positive <- conf_matrix[2, 2]
false_positive <- conf_matrix[1, 2]
true_negative <- conf_matrix[1, 1]
false_negative <- conf_matrix[2, 1]
precision <- true_positive / (true_positive + false_positive)
recall <- true_positive / (true_positive + false_negative)
specificity <- true_negative / (true_negative + false_positive)
f1 <- 2 * (precision * recall) / (precision + recall)
cat("Precision:", precision * 100, "%\n")
cat("Recall:", recall * 100, "%\n")
cat("Specificity:", specificity * 100, "%\n")
cat("F1 Score:", f1 * 100, "%\n")
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
# Preprocessing the data
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Region <- as.factor(data$Region)
set.seed(222)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Region <- as.factor(data$Income)
data$Purchase <- as.factor(data$Purchase)
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Region <- as.factor(data$Income)
data$Purchase <- as.factor(data$Purchase)
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Income <- as.factor(data$Income)
data$Purchase <- as.factor(data$Purchase)
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Income <- as.factor(data$Income)
data$Purchase <- as.factor(data$Purchase)
set.seed(222)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
?install.packages
# check to see if you have the kknn package
if (!("kknn" %in% rownames(installed.packages()))) {
install.packages("kknn")
}
#Use the R library("kknn")
library(kknn)
?kknn()
predict_k_3 = kknn(formula =Purchase ~ ., trainData, testData, k = 3, kernel = "rectangular")
fit_3 <- fitted(predict_k_3)
conf_matrix_3 <- table(testData$Purchase, fit_3)
cat("Confusion Matrix for k=3:\n")
print(conf_matrix_3)
accuracy <- function(x) { sum(diag(x) / sum(rowSums(x))) * 100 }
#Calculate accuracy for each k value
cat("Accuracy for k=3:", accuracy(conf_matrix_3), "%\n")
true_positive <- conf_matrix_3[2, 2]
false_positive <- conf_matrix_3[1, 2]
true_negative <- conf_matrix_3[1, 1]
false_negative <- conf_matrix_3[2, 1]
precision <- true_positive / (true_positive + false_positive)
recall <- true_positive / (true_positive + false_negative)
specificity <- true_negative / (true_negative + false_positive)
f1 <- 2 * (precision * recall) / (precision + recall)
cat("Precision:", precision * 100, "%\n")
cat("Recall:", recall * 100, "%\n")
cat("Specificity:", specificity * 100, "%\n")
cat("F1 Score:", f1 * 100, "%\n")
rm(list=ls())
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
# Preprocessing the data
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Income <- as.factor(data$Income)
data$Purchase <- as.factor(data$Purchase)
set.seed(222)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
?install.packages
# check to see if you have the kknn package
if (!("kknn" %in% rownames(installed.packages()))) {
install.packages("kknn")
}
#Use the R library("kknn")
library(kknn)
?kknn()
predict_k_3 = kknn(formula =Purchase ~ ., trainData, testData, k = 3, kernel = "rectangular")
fit_3 <- fitted(predict_k_3)
conf_matrix_1 <- table(testData$Purchase, fit_3)
cat("Confusion Matrix for k=3:\n")
print(conf_matrix_1)
knnPrediction <- predict(fit_3,testData = testData)
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
# Preprocessing the data
data$Purchase <- as.factor(data$Purchase)
set.seed(222)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
?install.packages
# check to see if you have the kknn package
if (!("kknn" %in% rownames(installed.packages()))) {
install.packages("kknn")
}
#Use the R library("kknn")
library(kknn)
?kknn()
predict_k_3 = kknn(formula =Purchase ~ ., trainData, testData, k = 3, kernel = "rectangular")
fit_3 <- fitted(predict_k_3)
conf_matrix_1 <- table(testData$Purchase, fit_3)
cat("Confusion Matrix for k=3:\n")
print(conf_matrix_1)
knnPrediction <- predict(fit_3, testData = testData)
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Income <- as.factor(data$Income)
data$Purchase <- as.factor(data$Purchase)
set.seed(222)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
if (!("kknn" %in% rownames(installed.packages()))) {
install.packages("kknn")
}
#Use the R library("kknn")
library(kknn)
?kknn()
predict_k_3 = kknn(formula =Purchase ~ ., trainData, testData, k = 3, kernel = "rectangular")
fit_3 <- fitted(predict_k_3)
conf_matrix_1 <- table(testData$Purchase, fit_3)
cat("Confusion Matrix for k=3:\n")
print(conf_matrix_1)
knnPrediction <- factor(fit_3, levels = levels(testData$Purchase))
true <- ifelse(testData$Purchase == "Yes", 1, 0)
conf_matrix <- table(knnPrediction,ture)
true <- ifelse(testData$Purchase == "Yes", 1, 0)
conf_matrix <- table(Predicted = knnPrediction, True = testData$Purchase)
accurancy <- sum(diag(conf_matrix)) / sum(conf_matrix)
cat("Accuracy:", accuracy * 100, "%\n")
accuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)
cat("Accuracy:", accuracy * 100, "%\n")
precision <- conf_matrix[2,2]/sum(conf_matrix[,2])
cat("Precision:", precision * 100, "%\n")
specificity <- conf_matrix[1,1]/sum(conf_matrix[,1])
cat("Specificity:", specificity * 100, "%\n")
recall <- conf_matrix[2,2]/sum(conf_matrix[2,])
cat("Recall:", recall * 100, "%\n")
f1_score <- 2 * (precision * recall) / (precision + recall)
cat("F1 Score:", f1_score * 100, "%\n")
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
# Preprocessing the data
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Income <- as.factor(data$Income)
data$Purchase <- as.factor(data$Purchase)
set.seed(123)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
?install.packages
# check to see if you have the kknn package
if (!("kknn" %in% rownames(installed.packages()))) {
install.packages("kknn")
}
#Use the R library("kknn")
library(kknn)
?kknn()
predict_k_3 = kknn(formula =Purchase ~ ., trainData, testData, k = 3, kernel = "rectangular")
fit_3 <- fitted(predict_k_3)
conf_matrix_1 <- table(testData$Purchase, fit_3)
cat("Confusion Matrix for k=3:\n")
print(conf_matrix_1)
knnPrediction <- factor(fit_3, levels = levels(testData$Purchase))
true <- ifelse(testData$Purchase == "Yes", 1, 0)
conf_matrix <- table(Predicted = knnPrediction, True = testData$Purchase)
accuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)
cat("Accuracy:", accuracy * 100, "%\n")
precision <- conf_matrix[2,2]/sum(conf_matrix[,2])
cat("Precision:", precision * 100, "%\n")
specificity <- conf_matrix[1,1]/sum(conf_matrix[,1])
cat("Specificity:", specificity * 100, "%\n")
recall <- conf_matrix[2,2]/sum(conf_matrix[2,])
cat("Recall:", recall * 100, "%\n")
f1_score <- 2 * (precision * recall) / (precision + recall)
cat("F1 Score:", f1_score * 100, "%\n")
rm(list=ls())
setwd("/Users/jiayinhuang/SIT-homework/CS/cs513-homework/Midterm")
data <- read.csv("CS513_targeting_num.CSV", na.strings = "?")
View(data)
?summary
summary(data)
#delete the rows with missing value
data <- na.omit(data)
View(data)
# Preprocessing the data
data$Age <- as.factor(data$Age)
data$Gender <- as.factor(data$Gender)
data$Income <- as.factor(data$Income)
data$Purchase <- as.factor(data$Purchase)
set.seed(123)
idx <- sample(nrow(data), as.integer(.70 * nrow(data)))
trainData <- data[idx,]
testData <- data[-idx,]
?install.packages
# check to see if you have the kknn package
if (!("kknn" %in% rownames(installed.packages()))) {
install.packages("kknn")
}
#Use the R library("kknn")
library(kknn)
?kknn()
predict_k_3 = kknn(formula =Purchase ~ ., trainData, testData, k = 3, kernel = "rectangular")
fit_3 <- fitted(predict_k_3)
conf_matrix_1 <- table(testData$Purchase, fit_3)
cat("Confusion Matrix for k=3:\n")
print(conf_matrix_1)
# Make predictions via KNN
knnPrediction <- factor(fit_3, levels = levels(testData$Purchase))
# Measure the metrics
true <- ifelse(testData$Purchase == "Yes", 1, 0)
conf_matrix <- table(Predicted = knnPrediction, True = testData$Purchase)
accuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)
cat("Accuracy:", accuracy * 100, "%\n")
precision <- conf_matrix[2,2]/sum(conf_matrix[,2])
cat("Precision:", precision * 100, "%\n")
specificity <- conf_matrix[1,1]/sum(conf_matrix[,1])
cat("Specificity:", specificity * 100, "%\n")
recall <- conf_matrix[2,2]/sum(conf_matrix[2,])
cat("Recall:", recall * 100, "%\n")
f1_score <- 2 * (precision * recall) / (precision + recall)
cat("F1 Score:", f1_score * 100, "%\n")
